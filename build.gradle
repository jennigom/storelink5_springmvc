buildscript {
    ext {
        springBootVersion = '2.5.13'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.storelink5'
    version = '1.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'io.jsonwebtoken:jjwt:0.9.1'
        implementation 'io.springfox:springfox-swagger-ui:3.0.0'
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.6'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-web-services'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}

project(':core') {
    // core 에서는 bootjar로 패키징 할 필요가 없으므로 추가
    //bootJar.enabled = false
    //jar.enabled = true

    dependencies {
    }
}

project(':front') {
    dependencies {
        // 컴파일시 core 모듈을 가져온다.
        implementation project(':core')
    }
}

project(':admin') {
    dependencies {
        implementation project(':core')
    }
}